Q: 1. What are the two values of the Boolean data type? How do you write them?
# True
# False


Q: 2. What are the three Boolean operators?
# and
# or
# not


Q: 3. Write out the truth tables of each Boolean operator (that is, every possible combination of Boolean values for the operator and what they evaluate to).
# and
# -True and True = True
# -True and False = False
# -False and True = False
# -False and False = False
# 
# or
# -True or True = True
# -True or False = True
# -False or True = True
# -False or False = False
# 
# not
# -not True = False
# -not False = True


Q: 4. What do the following expressions evaluate to?
	(5 > 4) and (3 == 5)						# False
	not (5 > 4)									# False
	(5 > 4) or (3 == 5)							# True
	not (( 5 > 4) or (3 == 5))					# False
	(True and True) and (True == False)			# False
	(not False) or (not True)					# True


Q: 5. What are the six comparison operators?
# == equal to
# != not
# <  less than
# >  greater than
# <= less than or equal to
# >= greater than or equal to


Q: 6. What is the difference between the equal to operator and the assignment operator?
# The equal to operator checks if two values are the same and returns either True or False.
# The equal to assignment operator assigns a value to a variable.


Q: 7. Explain what a condition is and where you would use one.
# A condition is an expression that evaluates down to True or False.
# Flow control statements depend on conditions to decide what to do.


Q: 8. Identify the three blocks in this code:
		spam = 0
		if spam = = 10:
			print(' eggs')			# block 1
			if spam > 5:
				print(' bacon')		# block 2
			else:
				print(' ham')		# block 3
			print(' spam')
		print(' spam')


Q: 9. Write code that prints Hello if 1 is stored in spam, prints Howdy if 2 is stored in spam, and prints Greetings! if anything else is stored in spam.
# see spamCheck.py


Q: 10. What can you press if your program is stuck in an infinite loop?
# Ctrl-C


Q: 11. What is the difference between break and continue?
# break ends the current loop
# continue ignores everything after it and returns to the beginning of the loop


Q: 12. What is the difference between range(10), range(0, 10), and range(0, 10, 1) in a for loop?
# The range(10) call ranges up to but not including 10
# The range(0) call ranges from 0 to but not including 10
# The range(0,10,1) call ranges from 0 up to but not including 10 in increments of 1


Q: 13. Write a short program that prints the numbers 1 to 10 using a for loop. Then write an equivalent program that prints the numbers 1 to 10 using a while loop.
# for i in range(1,11,1):
#	print(i)
# 
# i = 1
# while i < 11:
# 	print(i)
# 	i = i + 1


Q: 14. If you had a function named bacon() inside a module named spam, how would you call it after importing spam?
# spam.bacon()


Extra credit: Look up the round() and abs() functions on the Internet, and find out what they do. Experiment with them in the interactive shell.
# https://docs.python.org/2/library/functions.html
# 
# abs(number) returns the absolute value of a number. If it is a complex number, the mangitude is returned.
# 
# >>> abs(1)
# 1
# >>> abs(-1)
# 1
# >>> abs(-10)
# 10
# >>> abs(-3)
# 3
# 
# round(number,[, ndigits]) returns the floating point value number rounded to ndigits digits after the decimal point. if ndigits is omitted, it defaults to zero. the result is a floating point number.


Sweigart, Al. Automate the Boring Stuff with Python: Practical Programming for Total Beginners (p. 60). No Starch Press. Kindle Edition. 